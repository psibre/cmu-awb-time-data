plugins {
    id 'de.dfki.mary.voicebuilding-festvox' version '5.3.2'
    id "org.m2ci.msp.flaml" version "0.3.0"
    id 'ivy-publish'
}

group 'de.dfki.mary'
version '0.1-SNAPSHOT'

repositories {
    ivy {
        url 'https://dl.bintray.com/marytts/marytts'
        layout 'pattern', {
            artifact '[organisation]/[module]/[artifact].[ext]'
        }
    }
    ivy {
        url 'http://festvox.org/examples'
        layout 'pattern', {
            artifact '[module]_[classifier]/packed/[artifact].[ext]'
        }
    }
}

dependencies {
    data group: 'org.festvox', name: 'cmu_time_awb', classifier: 'ldom', ext: 'tar.bz2'
}

generateFlac {
    dependsOn wav
    srcFiles = fileTree(wav.destDir).include('*.wav')
    flacFile = flaml.flacFile
}

generateYaml {
    dependsOn wav
    srcFiles = fileTree(wav.destDir).include('*.wav')
}

text {
    srcFileName = 'time.data'
}

injectText {
    dependsOn text
    textDir = text.destDir
    yamlSrcFile = generateYaml.yamlFile
    yamlDestFile = layout.buildDirectory.file('dataWithText.yaml')
}

injectSegments {
    dependsOn lab
    labDir = lab.destinationDir
    yamlSrcFile = injectText.yamlDestFile
    yamlDestFile = flaml.yamlFile
}

task packageYaml(type: Zip) {
    from injectSegments
    from 'LICENSE.md'
}

publishing {
    publications {
        flaml(IvyPublication) {
            artifact packageYaml {
                classifier 'yaml'
            }
            artifact source: project.flaml.flacFile.get().asFile, classifier: 'flac'
            descriptor {
                status = project.version.endsWith('-SNAPSHOT') ? 'integration' : 'release'
            }
        }
    }
    repositories {
        ivy {
            name 'projectLocal'
            url "$buildDir/repo"
        }
    }
}
